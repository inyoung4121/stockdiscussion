
services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  gateway-server:
    build:
      context: ./gateway-server
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=gateway-server
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - kafka
      - userdb

  stock-service:
    build:
      context: ./stock-service
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=stock-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - kafka
      - stockdb

  stockcrawling-service:
    build:
      context: ./stockcrawling-service
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=stockcrawling-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - kafka
      - stock-service
      - crawlingdb

  zookeeper:
    image: wurstmeister/zookeeper
    platform: linux/amd64
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  userdb:
    image: mysql:8.0
    container_name: userdb
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: userdb
    ports:
      - "3306:3306"
    volumes:
      - userdb-data:/var/lib/mysql

  stockdb:
    image: mysql:8.0
    container_name: stockdb
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: stockdb
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - "3308:3306"
    volumes:
      - stockdb-data:/var/lib/mysql

  crawlingdb:
    image: mysql:8.0
    container_name: crawlingdb
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: crawlingdb
    ports:
      - "3309:3306"
    volumes:
      - crawlingdb-data:/var/lib/mysql


volumes:
  userdb-data:
  stockdb-data:
  crawlingdb-data: